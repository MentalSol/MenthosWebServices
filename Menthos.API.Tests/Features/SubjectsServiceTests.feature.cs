// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Menthos.API.Tests.Features
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public partial class SubjectsServiceTestsFeature : object, Xunit.IClassFixture<SubjectsServiceTestsFeature.FixtureData>, System.IDisposable
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private string[] _featureTags = ((string[])(null));
        
        private Xunit.Abstractions.ITestOutputHelper _testOutputHelper;
        
#line 1 "SubjectsServiceTests.feature"
#line hidden
        
        public SubjectsServiceTestsFeature(SubjectsServiceTestsFeature.FixtureData fixtureData, Menthos_API_Tests_XUnitAssemblyFixture assemblyFixture, Xunit.Abstractions.ITestOutputHelper testOutputHelper)
        {
            this._testOutputHelper = testOutputHelper;
            this.TestInitialize();
        }
        
        public static void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features", "SubjectsServiceTests", "As a Developer\r\nI want to add new Subject through API\r\nIn order to make it availa" +
                    "ble for applications.", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        public virtual void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Xunit.Abstractions.ITestOutputHelper>(_testOutputHelper);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 6
 #line hidden
#line 7
  testRunner.Given("the Endpoint https://localhost:7125/api/v1/subjects is available", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
        }
        
        void System.IDisposable.Dispose()
        {
            this.TestTearDown();
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="Add Subject with unique Name")]
        [Xunit.TraitAttribute("FeatureTitle", "SubjectsServiceTests")]
        [Xunit.TraitAttribute("Description", "Add Subject with unique Name")]
        [Xunit.TraitAttribute("Category", "subject-adding")]
        public virtual void AddSubjectWithUniqueName()
        {
            string[] tagsOfScenario = new string[] {
                    "subject-adding"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Add Subject with unique Name", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 10
 this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 6
 this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "Image"});
                table1.AddRow(new string[] {
                            "Calculo I",
                            "Calculo1.png"});
#line 11
  testRunner.When("a Post Request is sent", ((string)(null)), table1, "When ");
#line hidden
#line 14
  testRunner.Then("A Response is received with Status 200", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                            "Id",
                            "Name",
                            "Image"});
                table2.AddRow(new string[] {
                            "1",
                            "Calculo I",
                            "Calculo1.png"});
#line 15
  testRunner.And("a Subject Resource is included in Response Body", ((string)(null)), table2, "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="Add Subject 2 with unique Name")]
        [Xunit.TraitAttribute("FeatureTitle", "SubjectsServiceTests")]
        [Xunit.TraitAttribute("Description", "Add Subject 2 with unique Name")]
        [Xunit.TraitAttribute("Category", "subject-adding")]
        public virtual void AddSubject2WithUniqueName()
        {
            string[] tagsOfScenario = new string[] {
                    "subject-adding"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Add Subject 2 with unique Name", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 20
 this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 6
 this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "Image"});
                table3.AddRow(new string[] {
                            "Calculo II",
                            "Calculo2.png"});
#line 21
  testRunner.When("a Post Request is sent", ((string)(null)), table3, "When ");
#line hidden
#line 24
  testRunner.Then("A Response is received with Status 200", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                            "Id",
                            "Name",
                            "Image"});
                table4.AddRow(new string[] {
                            "1",
                            "Calculo II",
                            "Calculo2.png"});
#line 25
  testRunner.And("a Subject Resource is included in Response Body", ((string)(null)), table4, "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="Add Subject 3 with unique Name")]
        [Xunit.TraitAttribute("FeatureTitle", "SubjectsServiceTests")]
        [Xunit.TraitAttribute("Description", "Add Subject 3 with unique Name")]
        [Xunit.TraitAttribute("Category", "subject-adding")]
        public virtual void AddSubject3WithUniqueName()
        {
            string[] tagsOfScenario = new string[] {
                    "subject-adding"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Add Subject 3 with unique Name", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 30
 this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 6
 this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "Image"});
                table5.AddRow(new string[] {
                            "Matematica Basica",
                            "MatematicaBasica.png"});
#line 31
  testRunner.When("a Post Request is sent", ((string)(null)), table5, "When ");
#line hidden
#line 34
  testRunner.Then("A Response is received with Status 200", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                            "Id",
                            "Name",
                            "Image"});
                table6.AddRow(new string[] {
                            "1",
                            "Matematica Basica",
                            "MatematicaBasica.png"});
#line 35
  testRunner.And("a Subject Resource is included in Response Body", ((string)(null)), table6, "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="Add Subject 4 with unique Name")]
        [Xunit.TraitAttribute("FeatureTitle", "SubjectsServiceTests")]
        [Xunit.TraitAttribute("Description", "Add Subject 4 with unique Name")]
        [Xunit.TraitAttribute("Category", "subject-adding")]
        public virtual void AddSubject4WithUniqueName()
        {
            string[] tagsOfScenario = new string[] {
                    "subject-adding"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Add Subject 4 with unique Name", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 40
 this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 6
 this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "Image"});
                table7.AddRow(new string[] {
                            "Matematica Computacional",
                            "matematicaComputacional.png"});
#line 41
  testRunner.When("a Post Request is sent", ((string)(null)), table7, "When ");
#line hidden
#line 44
  testRunner.Then("A Response is received with Status 200", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                            "Id",
                            "Name",
                            "Image"});
                table8.AddRow(new string[] {
                            "1",
                            "Matematica Computacional",
                            "matematicaComputacional.png"});
#line 45
  testRunner.And("a Subject Resource is included in Response Body", ((string)(null)), table8, "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="Add Subject 5 with unique Name")]
        [Xunit.TraitAttribute("FeatureTitle", "SubjectsServiceTests")]
        [Xunit.TraitAttribute("Description", "Add Subject 5 with unique Name")]
        [Xunit.TraitAttribute("Category", "subject-adding")]
        public virtual void AddSubject5WithUniqueName()
        {
            string[] tagsOfScenario = new string[] {
                    "subject-adding"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Add Subject 5 with unique Name", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 50
 this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 6
 this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "Image"});
                table9.AddRow(new string[] {
                            "Programacion I",
                            "Programacion1.png"});
#line 51
  testRunner.When("a Post Request is sent", ((string)(null)), table9, "When ");
#line hidden
#line 54
  testRunner.Then("A Response is received with Status 200", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                            "Id",
                            "Name",
                            "Image"});
                table10.AddRow(new string[] {
                            "1",
                            "Programacion I",
                            "Programacion1.png"});
#line 55
  testRunner.And("a Subject Resource is included in Response Body", ((string)(null)), table10, "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="Add Subject 6 with unique Name")]
        [Xunit.TraitAttribute("FeatureTitle", "SubjectsServiceTests")]
        [Xunit.TraitAttribute("Description", "Add Subject 6 with unique Name")]
        [Xunit.TraitAttribute("Category", "subject-adding")]
        public virtual void AddSubject6WithUniqueName()
        {
            string[] tagsOfScenario = new string[] {
                    "subject-adding"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Add Subject 6 with unique Name", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 60
 this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 6
 this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "Image"});
                table11.AddRow(new string[] {
                            "Programacion II",
                            "Programacion2.png"});
#line 61
  testRunner.When("a Post Request is sent", ((string)(null)), table11, "When ");
#line hidden
#line 64
  testRunner.Then("A Response is received with Status 200", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                            "Id",
                            "Name",
                            "Image"});
                table12.AddRow(new string[] {
                            "1",
                            "Programacion II",
                            "Programacion2.png"});
#line 65
  testRunner.And("a Subject Resource is included in Response Body", ((string)(null)), table12, "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="Add Subject 7 with unique Name")]
        [Xunit.TraitAttribute("FeatureTitle", "SubjectsServiceTests")]
        [Xunit.TraitAttribute("Description", "Add Subject 7 with unique Name")]
        [Xunit.TraitAttribute("Category", "subject-adding")]
        public virtual void AddSubject7WithUniqueName()
        {
            string[] tagsOfScenario = new string[] {
                    "subject-adding"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Add Subject 7 with unique Name", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 70
 this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 6
 this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "Image"});
                table13.AddRow(new string[] {
                            "Fisica I",
                            "Fisica1.png"});
#line 71
  testRunner.When("a Post Request is sent", ((string)(null)), table13, "When ");
#line hidden
#line 74
  testRunner.Then("A Response is received with Status 200", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                            "Id",
                            "Name",
                            "Image"});
                table14.AddRow(new string[] {
                            "1",
                            "Fisica I",
                            "Fisica1.png"});
#line 75
  testRunner.And("a Subject Resource is included in Response Body", ((string)(null)), table14, "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="Add Subject 8 with unique Name")]
        [Xunit.TraitAttribute("FeatureTitle", "SubjectsServiceTests")]
        [Xunit.TraitAttribute("Description", "Add Subject 8 with unique Name")]
        [Xunit.TraitAttribute("Category", "subject-adding")]
        public virtual void AddSubject8WithUniqueName()
        {
            string[] tagsOfScenario = new string[] {
                    "subject-adding"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Add Subject 8 with unique Name", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 80
 this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 6
 this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "Image"});
                table15.AddRow(new string[] {
                            "Fisica II",
                            "Fisica2.png"});
#line 81
  testRunner.When("a Post Request is sent", ((string)(null)), table15, "When ");
#line hidden
#line 84
  testRunner.Then("A Response is received with Status 200", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                            "Id",
                            "Name",
                            "Image"});
                table16.AddRow(new string[] {
                            "1",
                            "Fisica II",
                            "Fisica2.png"});
#line 85
  testRunner.And("a Subject Resource is included in Response Body", ((string)(null)), table16, "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="Add Subject 9 with unique Name")]
        [Xunit.TraitAttribute("FeatureTitle", "SubjectsServiceTests")]
        [Xunit.TraitAttribute("Description", "Add Subject 9 with unique Name")]
        [Xunit.TraitAttribute("Category", "subject-adding")]
        public virtual void AddSubject9WithUniqueName()
        {
            string[] tagsOfScenario = new string[] {
                    "subject-adding"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Add Subject 9 with unique Name", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 90
 this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 6
 this.FeatureBackground();
#line hidden
                TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "Image"});
                table17.AddRow(new string[] {
                            "Quimica",
                            "Quimica.png"});
#line 91
  testRunner.When("a Post Request is sent", ((string)(null)), table17, "When ");
#line hidden
#line 94
  testRunner.Then("A Response is received with Status 200", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                            "Id",
                            "Name",
                            "Image"});
                table18.AddRow(new string[] {
                            "1",
                            "Quimica",
                            "Quimica.png"});
#line 95
  testRunner.And("a Subject Resource is included in Response Body", ((string)(null)), table18, "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
        [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        public class FixtureData : System.IDisposable
        {
            
            public FixtureData()
            {
                SubjectsServiceTestsFeature.FeatureSetup();
            }
            
            void System.IDisposable.Dispose()
            {
                SubjectsServiceTestsFeature.FeatureTearDown();
            }
        }
    }
}
#pragma warning restore
#endregion
